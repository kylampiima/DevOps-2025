trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DevOp  # Contains DOCKERHUB_USERNAME, DOCKERHUB_PASSWORD, FLY_DEPLOY_TOKEN, FLY_APP_NAME, SONAR_TOKEN

steps:

# Step 1: Cache Fly CLI
- task: Cache@2
  inputs:
    key: fly-cli-linux
    path: $(Pipeline.Workspace)/fly-cli
  displayName: 'Cache Fly CLI Binary'

# Step 2: Install Fly CLI (Linux-friendly shell script)
- script: |
    echo "Installing Fly CLI for Linux..."
    curl -L https://fly.io/install.sh | bash

    echo "Fly CLI installed to /home/vsts/.fly/bin/flyctl"
  
  displayName: 'Install Fly CLI (Linux)'

# Step 3: Format Code with Maven Plugin
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'io.spring.javaformat:spring-javaformat-maven-plugin:0.0.27:apply'
    options: '-DskipTests'
  displayName: 'Format Code with Maven'

# Step 4: Run Tests and SonarQube Analysis
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: '5.1.0.4751'
    options: '-Dsonar.token=$(SONAR_TOKEN)'
  displayName: 'Run Tests & SonarQube Analysis'

# Step 5: Publish Test Results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Tests for Petclinic'
  displayName: 'Publish Test Results'

# Step 6: Authenticate with Docker Hub
- script: |
    echo "Logging in to Docker Hub..."
    echo $(DOCKERHUB_PASSWORD) | docker login --username $(DOCKERHUB_USERNAME) --password-stdin
  displayName: 'Login to Docker Hub'

# Step 7: Build and Push Docker Image
- script: |
    IMAGE_NAME=$(DOCKERHUB_USERNAME)/petclinic-app2:latest
    echo "Building Docker image: $IMAGE_NAME"
    docker buildx build --provenance=false -t $IMAGE_NAME .

    echo "Pushing Docker image to Docker Hub..."
    docker push $IMAGE_NAME
  displayName: 'Build & Push Docker Image'

# Step 8: Trigger Fly.io Deployment using Deploy Token
- script: |
    echo "Triggering deployment on Fly.io using a deploy token..."
    
    export FLY_API_TOKEN=$(FLY_DEPLOY_TOKEN)
    IMAGE_NAME=$(DOCKERHUB_USERNAME)/petclinic-app2:latest
    
    /home/vsts/.fly/bin/flyctl deploy --image $IMAGE_NAME --app $(FLY_APP_NAME)

    echo "Deployment triggered successfully!"
  displayName: 'Trigger Fly.io Deployment'

# Step 9: Verify Fly.io Deployment Status and Show App URL
- script: |
    echo "Checking deployment status on Fly.io..."
    
    export FLY_API_TOKEN=$(FLY_DEPLOY_TOKEN)
    /home/vsts/.fly/bin/flyctl status --app $(FLY_APP_NAME)

    echo "ðŸŽ‰ Application deployed successfully!"
    echo "ðŸ”— Access it here: https://$(FLY_APP_NAME).fly.dev"
  displayName: 'Verify Fly.io Deployment'
