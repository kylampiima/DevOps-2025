trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DevOp  # Reference the variable group containing DOCKERHUB_USERNAME, DOCKERHUB_PASSWORD, RENDER_API_KEY, and RENDER_SERVICE_ID

steps:
# Install Render CLI
- script: |
    echo "Downloading Render CLI..."
    curl -L https://github.com/render/render-cli/releases/latest/download/render -o /usr/local/bin/render
    chmod +x /usr/local/bin/render
    render --version  # Verify the installation
  displayName: 'Install Render CLI'

# Step 2: Format Code Before Building
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'io.spring.javaformat:spring-javaformat-maven-plugin:0.0.27:apply'
    options: '-DskipTests'  # Skip tests during formatting
  displayName: 'Format Code with Maven'

# Step 3: Set up Maven and Run Tests with SonarQube Analysis
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: '5.1.0.4751'  # Use a specific version of the SonarQube plugin
    options: '-Dsonar.token=$(SONAR_TOKEN)'  # Pass the Sonar token as an option
  displayName: 'Run Maven Tests with SonarQube Analysis'

# Step 4: Publish Test Results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Tests for Petclinic'
  displayName: 'Publish Test Results'

# Step 5: Authenticate Docker with Docker Hub
- script: |
    echo "Logging in to Docker Hub..."
    echo $(DOCKERHUB_PASSWORD) | docker login --username $(DOCKERHUB_USERNAME) --password-stdin
  displayName: 'Login to Docker Hub'

# Step 6: Build and Push Docker Image
- script: |
    echo "Building and tagging Docker image..."
    docker buildx build --provenance=false -t $(DOCKERHUB_USERNAME)/kyla13/petclinic-app2:latest .
    
    echo "Pushing Docker image to Docker Hub..."
    docker push $(DOCKERHUB_USERNAME)/kyla13/petclinic-app2:latest
    echo "Docker image pushed to Docker Hub successfully."
  displayName: 'Build and Push Docker Image to Docker Hub'

# Step 7: Trigger Deployment on Render with Render CLI
- script: |
    echo "Triggering deployment on Render using Render CLI..."
    render deploys create $(RENDER_SERVICE_ID) \
      --image $(DOCKERHUB_USERNAME)/kyla13/petclinic-app2:latest \
      --wait
    echo "Deployment triggered on Render successfully!"
  displayName: 'Trigger Deployment on Render'

# Step 8: Verify Deployment Status
- script: |
    echo "Fetching Render deployment status..."
    curl -X GET \
    https://api.render.com/v1/services/$(RENDER_SERVICE_ID) \
    -H "Authorization: Bearer $(RENDER_API_KEY)"
    echo "Verify your app at Render's live URL or through their dashboard."
  displayName: 'Verify Deployment on Render'
