trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DevOp  # Includes SONAR_TOKEN, HEROKU_API_KEY, DOCKERHUB_USERNAME, and DOCKERHUB_PASSWORD

steps:
# Step 1: Format Code Before Building
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'io.spring.javaformat:spring-javaformat-maven-plugin:0.0.27:apply'
    options: '-DskipTests'  # Skip tests during formatting
  displayName: 'Format Code with Maven'

# Step 2: Run Tests with SonarQube Analysis
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: '5.1.0.4751'
    options: '-Dsonar.token=$(SONAR_TOKEN)'  # Pass the Sonar token as an option
  displayName: 'Run Maven Tests with SonarQube Analysis'

# Step 3: Publish Test Results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Tests for Petclinic'
  displayName: 'Publish Test Results'

# Step 4: Authenticate Docker with Docker Hub
- script: |
    echo "Logging in to Docker Hub..."
    echo $(DOCKERHUB_PASSWORD) | docker login --username $(DOCKERHUB_USERNAME) --password-stdin
  displayName: 'Login to Docker Hub'

# Step 5: Authenticate Docker with Heroku
- script: |
    echo "Logging in to Heroku registry..."
    echo $(HEROKU_API_KEY) | docker login --username=_ --password-stdin registry.heroku.com
  displayName: 'Login to Heroku'

# Step 6: Build and Push Docker Images
- script: |
    echo "Building and tagging Docker image..."
    docker buildx build --provenance=false -t registry.heroku.com/devops2025/web .
    echo "Pushing Docker image to Heroku..."
    docker push registry.heroku.com/devops2025/web
    echo "Pushing Docker image to Docker Hub..."
    docker tag registry.heroku.com/devops2025/web kyla13/petclinic-app2:latest
    docker push kyla13/petclinic-app2:latest
    echo "Docker images pushed successfully."
  displayName: 'Build and Push Docker Images to Heroku and Docker Hub'

# Step 7: Release Docker Image on Heroku
- script: |
    echo "Releasing Docker image on Heroku..."
    heroku container:release web --app devops2025 || echo "Release step timed out or failed!"
  displayName: 'Release Docker Image on Heroku'

# Step 8: Verify Deployment and Debug
- script: |
    echo "Checking Heroku release history..."
    heroku releases --app devops2025
    echo "Fetching Heroku logs to debug potential issues..."
    heroku logs --tail --app devops2025
    echo "If the app is deployed successfully, verify it at https://devops2025.herokuapp.com"
  displayName: 'Verify Deployment and Debug Logs'
