trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DevOp  # Reference the variable group containing SONAR_TOKEN

steps:
# Step 1: Format code before building
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'io.spring.javaformat:spring-javaformat-maven-plugin:0.0.27:apply'
    options: '-DskipTests'  # Skip tests during formatting

# Step 2: Set up Maven and run tests with SonarQube analysis
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: '5.1.0.4751'  # Use a specific version of the SonarQube plugin
    options: '-Dsonar.token=$(SONAR_TOKEN)'  # Pass the token as an option

# Step 3: Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Tests for Petclinic'

# Optional: Add additional steps for deployment or other tasks
- script: echo "Add other tasks to build, test, and deploy your project."
  displayName: 'Run a multi-line script'