trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DevOp  # Reference the variable group containing HEROKU_API_KEY and other variables

steps:
# Step 1: Install Heroku CLI
- script: |
    echo "Installing Heroku CLI..."
    curl https://cli-assets.heroku.com/install.sh | sh
    heroku --version  # Verify installation
  displayName: 'Install Heroku CLI'

# Step 2: Format code before building
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'io.spring.javaformat:spring-javaformat-maven-plugin:0.0.27:apply'
    options: '-DskipTests'  # Skip tests during formatting

# Step 3: Set up Maven and run tests with SonarQube analysis
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: '5.1.0.4751'  # Use a specific version of the SonarQube plugin
    options: '-Dsonar.token=$(SONAR_TOKEN)' 

# Step 4: Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'

# Step 5.1: Authenticate Docker with Docker Hub
- script: |
    echo "Logging in to Docker Hub..."
    echo $(DOCKERHUB_PASSWORD) | docker login --username $(DOCKERHUB_USERNAME) --password-stdin
  displayName: 'Login to Docker Hub'

# Step 5.2: Authenticate Docker with Heroku
- script: |
    echo "Logging in to Heroku registry..."
    echo $(HEROKU_API_KEY) | docker login --username=_ --password-stdin registry.heroku.com
  displayName: 'Login to Heroku'

# Step 6: Build and Tag Docker Images with Buildx
- script: |
    echo "Building and tagging Docker images using buildx..."
    docker buildx build --provenance=false -t kyla13/petclinic-app2:latest .
    docker tag kyla13/petclinic-app2:latest registry.heroku.com/devops2025/web
    echo "Docker images tagged for Docker Hub and Heroku."
  displayName: 'Build and Tag Docker Images with Buildx'

# Step 8: Push Docker Image to Docker Hub
- script: |
    echo "Pushing Docker image to Docker Hub..."
    docker push kyla13/petclinic-app2:latest
  displayName: 'Push Docker Image to Docker Hub'

# Step 7: Release Docker Image on Heroku
- script: |
    echo "Releasing Docker image on Heroku..."
    heroku container:release web --app devops2025
  displayName: 'Release Docker Image on Heroku'

# Step 8: Verify Deployment
- script: echo "Deployment complete. Verify at https://devops2025.herokuapp.com"
  displayName: 'Deployment Verification'
